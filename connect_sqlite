import sqlite3
import pandas as pd

# Connects to an existing database file in the current directory
# If the file does not exist, it creates it in the current directory
db_connect = sqlite3.connect('test.db')

# Instantiate cursor object for executing queries
cursor = db_connect.cursor()



# RELATION 1
# String variable for passing queries to cursor
query = """
    CREATE TABLE Clinic(
    clinicID INT PRIMARY KEY CHECK (clinicID > 0),
    clinicName VARCHAR(100),
    address VARCAHR(100),
    telephone INT,
    );
    """

# Execute query, the result is stored in cursor
cursor.execute(query)

# Insert row into table
query = """
    INSERT INTO Clinic
    VALUES (1, "Alpha", "111 Something Street", "738495379");
    """
cursor.execute(query)
query = """
    INSERT INTO Clinic
    VALUES (2, "Beta", "222 Something Street", "2469484649");
    """
cursor.execute(query)
query = """
    INSERT INTO Clinic
    VALUES (3, "Gamma", "333 Something Street", "4262693180");
    """
cursor.execute(query)
query = """
    INSERT INTO Clinic
    VALUES (4, "Delta", "444 Something Street", "0829480192");
    """
cursor.execute(query)
query = """
    INSERT INTO Clinic
    VALUES (5, "Epsilon", "555 Something Street", "4783962432");
    """
cursor.execute(query)

# Select data
query = """
    SELECT *
    FROM Clinic
    """
cursor.execute(query)

# Extract column names from cursor
column_names = [row[0] for row in cursor.description]


# Fetch data and load into a pandas dataframe
table_data = cursor.fetchall()

# RELATION 2
# String variable for passing queries to cursor
query = """
    CREATE TABLE Staff(
    staffNO INT,
    staffName VARCHAR(100),
    address VARCHAR(100),
    telephone INT,
    dob VARCHAR(100),
    position VARCHAR(100),
    salary INT,
    clinicID INT NOT NULL CHECK (clinicID > 0),
    FOREIGN KEY (clinicID) REFERENCES Clinic(clinicID) ON DELETE CASCADE
    );
    """

# Execute query, the result is stored in cursor
cursor.execute(query)

# Insert row into table
query = """
    INSERT INTO Staff
    VALUES (1, "Wendy", "59 Dodson Street","08-14-2001","Sales", 40000,1);
    """
cursor.execute(query)
query = """
    INSERT INTO Staff
    VALUES (2, "Jeff", "30 Alan Street","03-14-1992","Accounting, 60000,1);
    """
cursor.execute(query)
query = """
    INSERT INTO Staff
    VALUES (3, "James", "90 Viktor Street","05-14-1982","CEO", 400000,1);
    """
cursor.execute(query)
query = """
    INSERT INTO Staff
    VALUES (4, "Dominick", "622 Alageese Street","09-23-1999","COO", 70000,1);
    """
cursor.execute(query)
query = """
    INSERT INTO Staff
    VALUES (5, "Susan", "102 Railroad Street","09-13-1972,"CTO", 65000,1);
    """
cursor.execute(query)

# Select data
query = """
    SELECT *
    FROM Staff
    """
cursor.execute(query)

# Extract column names from cursor
column_names2 = [row[0] for row in cursor.description]

table_data2 = cursor.fetchall()

# RELATION 3
# String variable for passing queries to cursor
query = """
    CREATE TABLE Owner(
    ownerID INT PRIMARY KEY CHECK (Owner > 0),
    name VARCHAR(100),
    address VARCHAR(100),
    telephone INT
    );
    """

# Execute query, the result is stored in cursor
cursor.execute(query)

# Insert row into table
query = """
    INSERT INTO Owner
    VALUES (1, "Mike","167 Oak Street", "3784264536");
    """
cursor.execute(query)
query = """
    INSERT INTO Owner
    VALUES (2, "Jerry","575 Drake Street", "9378467468");
    """
cursor.execute(query)
query = """
    INSERT INTO Owner
    VALUES (3, "Ash","187 Ocean Street", "3378349230");
    """
cursor.execute(query)
query = """
    INSERT INTO Owner
    VALUES (4, "John","42 Phantom Blvd", "2390327240);
    """
cursor.execute(query)
query = """
    INSERT INTO Owner
    VALUES (5, "Dom","80 SW 97th Street", "1309341111");
    """
cursor.execute(query)

# Select data
query = """
    SELECT *
    FROM Owner
    """
cursor.execute(query)

# Extract column names from cursor
column_names3 = [row[0] for row in cursor.description]
table_data3 = cursor.fetchall()

# RELATION 4
# String variable for passing queries to cursor
query = """
    CREATE TABLE Pet(
    petID INT PRIMARY KEY CHECCK (PetID > 0),
    name VARCHAR(100),
    dob VARCHAR(100),
    species VARCHAR(100),
    breed VARCHAR(100),
    color VARCHAR(100),
    ownerID INT NOT NULL CHECK (ownerID > 0),
    clinicID INT NOT NULL CHECK (CLINICID > 0),
    foreign key (ownerID) REFERENCES Owner (ownerID) ON DELETE CASCADE,
    FOREIGN KEY (clinicID) REFERENCES Clinic(clinicID) ON DELETE CASCADE, 
    );
    """

# Execute query, the result is stored in cursor
cursor.execute(query)

# Insert row into table
query = """
    INSERT INTO Pet
    VALUES (1, "Rose","03-02-2004", "Dog", "Husky", "Black", 1, 1);
    """
cursor.execute(query)
query = """
    INSERT INTO Pet
    VALUES (2, "Lilly","07-02-2008", "Cat", "Siberian", "Gray", 2, 1);
    """
cursor.execute(query)
query = """
    INSERT INTO Pet
    VALUES (3, "Sam","12-11-2011, "Cow", "North American", "Brown", 3, 1);
    """
cursor.execute(query)
query = """
    INSERT INTO Pet
    VALUES (4, "Joe","01-18-2007", "Monkey", "African", "Brown", 4, 1);
    """
cursor.execute(query)
query = """
    INSERT INTO Pet
    VALUES (5, "Noah,"08-04-2016", "Bird", "Cardinal", "Red", 5, 1);
    """
cursor.execute(query)


# Select data
query = """
    SELECT *
    FROM Pet
    """
cursor.execute(query)

# Extract column names from cursor
column_names4 = [row[0] for row in cursor.description]
table_data4 = cursor.fetchall()

# RELATION 5
# String variable for passing queries to cursor
query = """
    CREATE TABLE Examination(
    examID INT PRIMARY KEY CHECK (examNO > 0),
    chiefComplaint VARCHAR(100),
    description VARCHAR(100),
    dateSeen VARCHAR(100),
    actionTaken VARCHAR(100),
    staffID INT NOT NULL CHECK (staffID > 0),
    petID INT NOT NULL CHECK (petID > 0).
    FOREIGN KEY (staffID) REFERENCES Staff(staffID) ON DELETE SET NULL,
    FOREIGN KEY (petNO) REFERENCES pet(petID) ON DELETE CASCADE
    );
    """

# Execute query, the result is stored in cursor
cursor.execute(query)

# Insert row into table
query = """
    INSERT INTO Examination
    VALUES (1, "Checkup", "Seems healthy", "No action taken", 1,1);
    """
cursor.execute(query)
query = """
    INSERT INTO Examination
    VALUES (2, "Cold", "Temperature is high", "Medicine given", 1,2);
    """
cursor.execute(query)
query = """
    INSERT INTO Examination
    VALUES (3, "Broken leg", "Is not walking well", "Surgery", 1,3);
    """
cursor.execute(query)
query = """
    INSERT INTO Examination
    VALUES (4, "Checkup", "Seems healthy", "No action taken", 1,4);
    """
cursor.execute(query)
query = """
    INSERT INTO Examination
    VALUES (5, "Checkup", "High blood pressure", "Medicine given", 1,5);
    """
cursor.execute(query)

# Select data
query = """
    SELECT *
    FROM Examination
    """
cursor.execute(query)

# Extract column names from cursor
column_names5 = [row[0] for row in cursor.description]


# Fetch data and load into a pandas dataframe
table_data5 = cursor.fetchall()


df = pd.DataFrame(table_data, columns=column_names)
df2 = pd.DataFrame(table_data2, columns=column_names2)
df3 = pd.DataFrame(table_data3, columns=column_names3)
df4 = pd.DataFrame(table_data4, columns=column_names4)
df5 = pd.DataFrame(table_data5, columns=column_names5)
# Examine dataframe
print(df)
print(df.columns)
print("\n")
print(df2)
print(df2.columns)
print(df3)
print(df3.columns)
print("\n")
print(df4)
print(df4.columns)
print("\n")
print(df5)
print(df5.columns)



# Example to extract a specific column
# print(df['name'])


# Commit any changes to the database
db_connect.commit()

# Close the connection if we are done with it.
# Just be sure any changes have been committed or they will be lost.
db_connect.close()
